#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Apr 27, 2022 07:12:20 PM PDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

from ui.AddCustomerEmployerForm import AddCustomerEmployerForm_support


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x441+1824+889")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Add Employer Information")
        top.configure(highlightcolor="black")

        self.top = top
        self.employerValue = tk.StringVar()
        self.addressValue = tk.StringVar()
        self.stateValue = tk.StringVar()
        self.supervisorValue = tk.StringVar()
        self.startDateValue = tk.StringVar()
        self.titleValue = tk.StringVar()
        self.cityValue = tk.StringVar()
        self.zipValue = tk.StringVar()
        self.phoneValue = tk.StringVar()
        self.endDateValue = tk.StringVar()

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.017, rely=0.023, height=20, width=174)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(compound='left')
        self.Label1.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label1.configure(text='''Employer Information''')

        self.Company = tk.Label(self.top)
        self.Company.place(relx=0.017, rely=0.134, height=20, width=114)
        self.Company.configure(activebackground="#f9f9f9")
        self.Company.configure(anchor='w')
        self.Company.configure(compound='left')
        self.Company.configure(text='''Company''')

        self.Address = tk.Label(self.top)
        self.Address.place(relx=0.017, rely=0.245, height=20, width=114)
        self.Address.configure(activebackground="#f9f9f9")
        self.Address.configure(anchor='w')
        self.Address.configure(compound='left')
        self.Address.configure(text='''Address''')

        self.State = tk.Label(self.top)
        self.State.place(relx=0.017, rely=0.356, height=21, width=114)
        self.State.configure(activebackground="#f9f9f9")
        self.State.configure(anchor='w')
        self.State.configure(compound='left')
        self.State.configure(text='''State''')

        self.Superviser = tk.Label(self.top)
        self.Superviser.place(relx=0.017, rely=0.467, height=21, width=114)
        self.Superviser.configure(activebackground="#f9f9f9")
        self.Superviser.configure(anchor='w')
        self.Superviser.configure(compound='left')
        self.Superviser.configure(text='''Superviser''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Superviser_1 = tk.Label(self.top)
        self.Superviser_1.place(relx=0.017, rely=0.578, height=21, width=114)
        self.Superviser_1.configure(activebackground="#f9f9f9")
        self.Superviser_1.configure(anchor='w')
        self.Superviser_1.configure(compound='left')
        self.Superviser_1.configure(text='''State Date''')

        self.CompanyEntry = tk.Entry(self.top)
        self.CompanyEntry.place(relx=0.217, rely=0.134, height=20
                , relwidth=0.257)
        self.CompanyEntry.configure(background="white")
        self.CompanyEntry.configure(font="TkFixedFont")
        self.CompanyEntry.configure(selectbackground="blue")
        self.CompanyEntry.configure(selectforeground="white")
        self.CompanyEntry.configure(textvariable=self.employerValue)

        self.AddressEntry = tk.Entry(self.top)
        self.AddressEntry.place(relx=0.217, rely=0.245, height=20
                , relwidth=0.257)
        self.AddressEntry.configure(background="white")
        self.AddressEntry.configure(font="TkFixedFont")
        self.AddressEntry.configure(selectbackground="blue")
        self.AddressEntry.configure(selectforeground="white")
        self.AddressEntry.configure(textvariable=self.addressValue)

        self.StateEntry = tk.Entry(self.top)
        self.StateEntry.place(relx=0.217, rely=0.356, height=20, relwidth=0.257)
        self.StateEntry.configure(background="white")
        self.StateEntry.configure(font="TkFixedFont")
        self.StateEntry.configure(selectbackground="blue")
        self.StateEntry.configure(selectforeground="white")
        self.StateEntry.configure(textvariable=self.stateValue)

        self.SuperviserEntry = tk.Entry(self.top)
        self.SuperviserEntry.place(relx=0.217, rely=0.467, height=20
                , relwidth=0.257)
        self.SuperviserEntry.configure(background="white")
        self.SuperviserEntry.configure(font="TkFixedFont")
        self.SuperviserEntry.configure(selectbackground="blue")
        self.SuperviserEntry.configure(selectforeground="white")
        self.SuperviserEntry.configure(textvariable=self.supervisorValue)

        self.StartDateEntry = tk.Entry(self.top)
        self.StartDateEntry.place(relx=0.217, rely=0.578, height=20
                , relwidth=0.257)
        self.StartDateEntry.configure(background="white")
        self.StartDateEntry.configure(font="TkFixedFont")
        self.StartDateEntry.configure(selectbackground="blue")
        self.StartDateEntry.configure(selectforeground="white")
        self.StartDateEntry.configure(textvariable=self.startDateValue)

        self.Title = tk.Label(self.top)
        self.Title.place(relx=0.533, rely=0.134, height=20, width=114)
        self.Title.configure(activebackground="#f9f9f9")
        self.Title.configure(anchor='w')
        self.Title.configure(compound='left')
        self.Title.configure(text='''Title''')

        self.City = tk.Label(self.top)
        self.City.place(relx=0.533, rely=0.245, height=20, width=114)
        self.City.configure(activebackground="#f9f9f9")
        self.City.configure(anchor='w')
        self.City.configure(compound='left')
        self.City.configure(text='''City''')

        self.Zip = tk.Label(self.top)
        self.Zip.place(relx=0.533, rely=0.356, height=21, width=114)
        self.Zip.configure(activebackground="#f9f9f9")
        self.Zip.configure(anchor='w')
        self.Zip.configure(compound='left')
        self.Zip.configure(text='''Zip''')

        self.Phone = tk.Label(self.top)
        self.Phone.place(relx=0.533, rely=0.467, height=21, width=114)
        self.Phone.configure(activebackground="#f9f9f9")
        self.Phone.configure(anchor='w')
        self.Phone.configure(compound='left')
        self.Phone.configure(text='''Phone''')

        self.EndDate = tk.Label(self.top)
        self.EndDate.place(relx=0.533, rely=0.578, height=21, width=114)
        self.EndDate.configure(activebackground="#f9f9f9")
        self.EndDate.configure(anchor='w')
        self.EndDate.configure(compound='left')
        self.EndDate.configure(text='''End Date''')

        self.TitleEntry = tk.Entry(self.top)
        self.TitleEntry.place(relx=0.717, rely=0.134, height=20, relwidth=0.257)
        self.TitleEntry.configure(background="white")
        self.TitleEntry.configure(font="TkFixedFont")
        self.TitleEntry.configure(selectbackground="blue")
        self.TitleEntry.configure(selectforeground="white")
        self.TitleEntry.configure(textvariable=self.titleValue)

        self.CityEntry = tk.Entry(self.top)
        self.CityEntry.place(relx=0.717, rely=0.245, height=20, relwidth=0.257)
        self.CityEntry.configure(background="white")
        self.CityEntry.configure(font="TkFixedFont")
        self.CityEntry.configure(selectbackground="blue")
        self.CityEntry.configure(selectforeground="white")
        self.CityEntry.configure(textvariable=self.cityValue)

        self.ZipEntry = tk.Entry(self.top)
        self.ZipEntry.place(relx=0.717, rely=0.356, height=20, relwidth=0.257)
        self.ZipEntry.configure(background="white")
        self.ZipEntry.configure(font="TkFixedFont")
        self.ZipEntry.configure(selectbackground="blue")
        self.ZipEntry.configure(selectforeground="white")
        self.ZipEntry.configure(textvariable=self.zipValue)

        self.PhoneEntry = tk.Entry(self.top)
        self.PhoneEntry.place(relx=0.717, rely=0.467, height=20, relwidth=0.257)
        self.PhoneEntry.configure(background="white")
        self.PhoneEntry.configure(font="TkFixedFont")
        self.PhoneEntry.configure(selectbackground="blue")
        self.PhoneEntry.configure(selectforeground="white")
        self.PhoneEntry.configure(textvariable=self.phoneValue)

        self.EndDateEntry = tk.Entry(self.top)
        self.EndDateEntry.place(relx=0.717, rely=0.578, height=20
                , relwidth=0.257)
        self.EndDateEntry.configure(background="white")
        self.EndDateEntry.configure(font="TkFixedFont")
        self.EndDateEntry.configure(selectbackground="blue")
        self.EndDateEntry.configure(selectforeground="white")
        self.EndDateEntry.configure(textvariable=self.endDateValue)

        self.Submit = tk.Button(self.top)
        self.Submit.place(relx=0.75, rely=0.93, height=24, width=147)
        self.Submit.configure(activebackground="#f9f9f9")
        self.Submit.configure(command=AddCustomerEmployerForm_support.Submit)
        self.Submit.configure(compound='left')
        self.Submit.configure(pady="0")
        self.Submit.configure(text='''Submit''')

        self.Random = ttk.Button(self.top)
        self.Random.place(relx=0.017, rely=0.907, height=28, width=83)
        self.Random.configure(command=AddCustomerEmployerForm_support.randomData)
        self.Random.configure(takefocus="")
        self.Random.configure(text='''Random''')
        self.Random.configure(compound='left')

def start_up():
    AddCustomerEmployerForm_support.main()

if __name__ == '__main__':
    AddCustomerEmployerForm_support.main()




